{
    "version": "https://jsonfeed.org/version/1",
    "title": "Tild",
    "description": "",
    "home_page_url": "https://wagam.github.io/tild",
    "feed_url": "https://wagam.github.io/tild/feed.json",
    "user_comment": "",
    "author": {
        "name": "Marc"
    },
    "items": [
        {
            "id": "https://wagam.github.io/tild/tid-eternal-jukebox.html",
            "url": "https://wagam.github.io/tild/tid-eternal-jukebox.html",
            "title": "TID eternal jukebox",
            "summary": "When you listen to music, you probably often hear patterns multiple time accros a song. And maybe sometimes, you may have think to make a loop between two similar parts of the song. Well, with Eternal jukebox, it is now possible! You can select the song&hellip;",
            "content_html": "<p>When you listen to music, you probably often hear patterns multiple time accros a song. And maybe sometimes, you may have think to make a loop between two similar parts of the song. Well, with<a href=\"https://eternalbox.dev/jukebox_index.html\"> Eternal jukebox</a>, it is now possible! You can select the song of your choice and apply differents filters to make this song unique and eternal. </p>\n<p>You should really try it! </p>\n<p> </p>\n<p>Enjoy!</p>",
            "image": "https://wagam.github.io/tild/media/posts/20/djs-2010271_1280.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "TID",
                   "Fun"
            ],
            "date_published": "2020-04-29T09:05:57+02:00",
            "date_modified": "2020-04-29T09:05:57+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/til-auto-fit-multiple-column-with-css-grid.html",
            "url": "https://wagam.github.io/tild/til-auto-fit-multiple-column-with-css-grid.html",
            "title": "TIL auto fit multiple column with CSS grid",
            "summary": " If you don't knwo how may items you will have and want them to fit in a row, you can use CSS grid. It is a powerful CSS feature (with my favourite flexbox)..container { display: grid; grid-template-columns: repeat(auto-fit, 160px); justify-content: center; gap: 20px; }The tricky&hellip;",
            "content_html": "<div> If you don't knwo how may items you will have and want them to fit in a row, you can use CSS grid. It is a powerful CSS feature (with my favourite flexbox).</div>\n<pre><code>.container {\n display: grid;\n grid-template-columns: repeat(auto-fit, 160px);\n justify-content: center;\n gap: 20px;<br>}</code></pre>\n<div>The tricky part is line 3 where you fill a column with all the items (repeat) that can fit in the screen width with 160px width each and separated with 20px gap. </div>\n<div> </div>\n<div>Enjoy!</div>",
            "image": "https://wagam.github.io/tild/media/posts/19/green-1738220_1280.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "TIL",
                   "CSS"
            ],
            "date_published": "2020-04-28T08:00:00+02:00",
            "date_modified": "2020-04-28T09:59:53+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/til-how-to-reset-a-html-input-file.html",
            "url": "https://wagam.github.io/tild/til-how-to-reset-a-html-input-file.html",
            "title": "TIL how to reset a HTML input file",
            "summary": "When you want to upload a file, you often want to see a preview before sending it. To do this, I show a preview in a canvas. But even if I close the preview part, the input is still loaded with the selected filed. So,&hellip;",
            "content_html": "<p>When you want to upload a file, you often want to see a preview before sending it. To do this, I show a preview in a canvas. But even if I close the preview part, the input is still loaded with the selected filed. So, if you try to show again the preview of the same file, no event is catched in the onChange method.</p>\n<p>I found a solution to do this with a single line of code.</p>\n<p>To reset a HTML input file :</p>\n<pre>&lt;input id=\"fileuploader\" type=\"file\" onChange={(event)=&gt; handleFileUpdate(event)}/&gt;</pre>\n<p>It can be easily done by replacing its value by an empty string :</p>\n<pre>document.getElementById(\"fileuploader\").value = \"\";</pre>\n<p>This way, if you try to upload again the same file, becuase the value has changed, the onChange event is catched and you can preview it again.</p>\n<p>Hope it helps!</p>\n<p> </p>\n<p>Enjoy! </p>",
            "image": "https://wagam.github.io/tild/media/posts/18/dual-screen-1745705_1280.png",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "Web development",
                   "TIL"
            ],
            "date_published": "2020-04-27T14:22:45+02:00",
            "date_modified": "2020-04-27T14:23:59+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/til-how-to-change-url-without-updating-page-in-browser.html",
            "url": "https://wagam.github.io/tild/til-how-to-change-url-without-updating-page-in-browser.html",
            "title": "TIL how to change url without updating page in browser",
            "summary": "In a Next.JS / React project, I needed to update query params in URL to match values updated in a form. But I didn't want to reload and refresh the page completely because when the form is sent, the answers are updated by an API&hellip;",
            "content_html": "<p>In a Next.JS / React project, I needed to update query params in URL to match values updated in a form. But I didn't want to reload and refresh the page completely because when the form is sent, the answers are updated by an API call. </p>\n<p>Typically, you are suppose to use </p>\n<pre><code>Router.push(url, as, {shallow: true})</code></pre>\n<p>But it does not worked in my case after various attempts.</p>\n<p>After some research on the internets, I found a solution from <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\">Mozilla</a> : history state</p>\n<p>To add history state in the browser without reloading the page, it exists this method: </p>\n<pre><code> history.pushState(state,title,url)</code></pre>\n<p>In my case, I updated only the URL param </p>\n<pre><code> history.pushState({},'',newURLWithQueryParams)</code></pre>\n<p>Hope it can help</p>\n<p> </p>\n<p>Enjoy!</p>",
            "image": "https://wagam.github.io/tild/media/posts/17/white-ceramic-teacup-with-saucer-near-two-books-above-gray-904616.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "Web development",
                   "TIL"
            ],
            "date_published": "2020-04-22T10:03:07+02:00",
            "date_modified": "2020-04-27T14:26:48+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/til-how-to-rename-mass-files-with-zsh.html",
            "url": "https://wagam.github.io/tild/til-how-to-rename-mass-files-with-zsh.html",
            "title": "TIL how to rename mass files with zsh",
            "summary": "Zsh is now the default terminal for macos, replacing well known bash. I needed to rename a lot of files in a project, displayed in multiples and various subfolders. I learnt a new command names zmv that comes directly with zsh and that is similar&hellip;",
            "content_html": "<p>Zsh is now the default terminal for macos, replacing well known bash. </p>\n<p>I needed to rename a  lot of files in a project, displayed in multiples and various subfolders. </p>\n<p>I learnt a new command names zmv that comes directly with zsh and that is similar in mv command in various ways. </p>\n<p>To rename all your files in your current folder you can type:</p>\n<pre><code>$ zmv '(*).scss' '$1.scss'</code></pre>\n<p>To rename all your files in subfolders too you can type</p>\n<pre><code>$  zmv '(**/)(*).scss' '$1/$2.module.scss'</code></pre>\n<p> </p>",
            "image": "https://wagam.github.io/tild/media/posts/16/files-1614223_1280.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
            ],
            "date_published": "2020-04-18T15:48:00+02:00",
            "date_modified": "2020-04-27T14:27:06+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/til-how-to-listen-to-a-hubspot-submit-form-event.html",
            "url": "https://wagam.github.io/tild/til-how-to-listen-to-a-hubspot-submit-form-event.html",
            "title": "TIL how to listen to a Hubspot submit form event",
            "summary": "For my current project, I need to send data to hubspot via a form. This form is managed by Hubspot and injected in my code during runtime. I cannot modify the sumit button behaviour. I dealt with this problem by listening the click event when&hellip;",
            "content_html": "<p>For my current project, I need to send data to hubspot via a form. This form is managed by Hubspot and injected in my code during runtime. I cannot modify the sumit button behaviour. </p>\n<p>I dealt with this problem by listening the click event when someone clicks on the submit button. </p>\n<p>I did it like this in my React component : </p>\n<div>\n<pre><code>class Compo extends React.Component {\n</code><br><code>componentDidMount() {</code><br><code>// add eventListener after 1 sec to be sure hubspot form is loaded</code><br><code>  setTimeout(() =&gt;window.addEventListener('message', this.handleSubmitHubspotForm), 1000);</code><br><code>} </code><br><br><code>componentWillUnmount() {</code><br><code>//remove event listener when we change to a new page</code><br><code>window.removeEventListener('message', this.handleSubmitHubspotForm)</code><br><code>}</code><br><br><code>// method to catch event triggered by the submit button</code><br><code>handleSubmitHubspotForm = (event: any) =&gt; {</code><br><code>const decodedAndShortenUrl=decodeURI(urlToRedirect);</code><br><br><code>if (event.data.type==='hsFormCallback'&amp;&amp;event.data.eventName==='onFormSubmit') {</code><br><br><code>// redirect to a new URL when event is catch</code><br><code>setTimeout(() =&gt;Router.push(decodedAndShortenUrl), 5000)</code><br><code>};</code><br><br><code>}<br></code></pre>\n<div>Nothing hard here but a quick snippet code reminder for a next time. </div>\n<div> </div>\n<div>Hope it helps. </div>\n<div> </div>\n<div>Enjoy! </div>\n</div>",
            "image": "https://wagam.github.io/tild/media/posts/15/adler-2918835_1280.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "Web development",
                   "TIL"
            ],
            "date_published": "2020-04-17T12:05:32+02:00",
            "date_modified": "2020-04-17T12:08:26+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/tid-notion.html",
            "url": "https://wagam.github.io/tild/tid-notion.html",
            "title": "TID Notion",
            "summary": "I need to take several notes every day with a consistent style and in an organized manner and with a tool available and synchronized across multiple devices. I need to take notes about a future blog article, a meeting, for a to do list ...,&hellip;",
            "content_html": "<p>I need to take several notes every day with a consistent style and in an organized manner and with a tool available and synchronized across multiple devices. I need to take notes about a future blog article, a meeting, for a to do list ..., with a tool giving consistency and easy to use. After some research and after trying various solutions as Google Keep, Standard notes and Evernote, I discovered <a href=\"www.notion.so\">Notion</a>. </p>\n<p>Notion is easy to use, very flexible and contains a lot of documents templates (and you can use community templates too). A lot of features are available, from exporting to PDF to share your doc with a team (paid feature). I recommend you to try it! </p>\n<p> </p>\n<p>Enjoy</p>",
            "image": "https://wagam.github.io/tild/media/posts/14/typewriter-801921_1280.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "TID",
                   "Personal development"
            ],
            "date_published": "2020-04-16T09:26:51+02:00",
            "date_modified": "2020-04-16T09:27:27+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/til-how-to-keep-macos-desktops-order.html",
            "url": "https://wagam.github.io/tild/til-how-to-keep-macos-desktops-order.html",
            "title": "TIL how to keep macOS desktops order",
            "summary": "I use a macbook almost every day, and I have a lot of apps opened all the time : iTerm2, Firefox, Spotify, Spark, Slack, VSCode and more... I like to have them displayed on differents \"desktops\" to switch between apps fast with my mouse. Until&hellip;",
            "content_html": "<p>I use a macbook almost every day, and I have a lot of apps opened all the time : iTerm2, Firefox, Spotify, Spark, Slack, VSCode and more... I like to have them displayed on differents \"desktops\" to switch between apps fast with my mouse. Until today, desktops moved sometimes from one position to another. Desktop 2 switched with Desktop 4 or another according a kind of random pattern I didn't identify. </p>\n<p>Finally, I decided to search a little on the internet and I found the guilty : Mission Control.</p>\n<p>To enable/disable desktops reordering, go to </p>\n<pre>System Prefs &gt; Mission Control</pre>\n<p>And check/uncheck </p>\n<pre>Automatically rearrange Spaces based on most recent use.</pre>\n<p><img src=\"https://wagam.github.io/tild/media/posts/13/Capture-decran-2020-04-09-a-09.28.20.png\" alt=\"\" width=\"1582\" height=\"982\"></p>\n<p>Thanks to <a href=\"https://apple.stackexchange.com/a/214349\">Tetsujin </a></p>\n<p>Enjoy!</p>",
            "image": "https://wagam.github.io/tild/media/posts/13/cockpit-79525_1280.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "TIL"
            ],
            "date_published": "2020-04-09T09:31:21+02:00",
            "date_modified": "2020-04-09T09:31:21+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/tid-08-02-2020-coolers.html",
            "url": "https://wagam.github.io/tild/tid-08-02-2020-coolers.html",
            "title": "TID Coolers",
            "summary": "When you need ideas to design your website or to find color that can match together, you can use your imagination or various tools. I recently need a good palette generator to update colors in a website and I found Coolers. You can create your own&hellip;",
            "content_html": "<p>When you need ideas to design your website or to find color that can match together, you can use your imagination or various tools. I recently need a good palette generator to update colors in a website and I found <a href=\"https://coolers.co\">Coolers</a>. You can create your own palette or choose one created by the community. You can filter these palettes by name, by popularity and more. </p>\n<p>I like this generator because it is an easy tool to use with infinite possibilities for your newt website or blog or design project.</p>\n<p> </p>\n<p>Enjoy!</p>",
            "image": "https://wagam.github.io/tild/media/posts/12/green-1738220_1280.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "Webdesign",
                   "UI",
                   "TID"
            ],
            "date_published": "2020-04-08T14:10:19+02:00",
            "date_modified": "2020-04-09T09:33:39+02:00"
        },
        {
            "id": "https://wagam.github.io/tild/tis-04-02-2020-my-favourite-youtubers-2.html",
            "url": "https://wagam.github.io/tild/tis-04-02-2020-my-favourite-youtubers-2.html",
            "title": "TIS My favourite youtubers #2",
            "summary": "Today a new list of my favourite youtubers. Last time, I shared a list about movies and TV shows. This time, it is about science: Enjoy!",
            "content_html": "<p>Today a new list of my favourite youtubers. Last time, I shared a list about movies and TV shows. This time, it is about science: </p>\n<h2 id=\"mcetoc_1e59pj6v40\">Astronogeek</h2>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/k96FXjEQXK4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe> </p>\n<h2 id=\"mcetoc_1e59pj9gb1\">Computerphile</h2>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/89A4jGvaaKk\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe> </p>\n<h2 id=\"mcetoc_1e59pjdhl2\">dirtyBiology</h2>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/bM7AOBxqjnE\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<h2 id=\"mcetoc_1e59pjk9v3\">e-penser</h2>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/hJe5MDMWOaU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<h2 id=\"mcetoc_1e59pjmr64\">scinema</h2>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/P1VW4ZhPENA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"allowfullscreen\"></iframe> </p>\n<p> </p>\n<p>Enjoy!</p>",
            "image": "https://wagam.github.io/tild/media/posts/11/milky-way-1023340_1280.jpg",
            "author": {
                "name": "Marc"
            },
            "tags": [
                   "Youtube",
                   "TIS"
            ],
            "date_published": "2020-04-07T09:45:32+02:00",
            "date_modified": "2020-04-09T09:33:06+02:00"
        }
    ]
}
